import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { useState, useEffect, MouseEvent, useRef, ChangeEvent } from 'react';

export default function Home() {
  const [time, setTime] = useState<number>(850);
  const [active, setActive] = useState<boolean>(false);
  const [inputInactive, setInputInactive] = useState<boolean>(true);
  const intervalTimer = useRef<ReturnType<typeof setInterval>>();

  const handleStart = (e: MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    setInputInactive(true);
    if (time == 0) return;
    setActive((prev) => !prev);
  };

  const handleMinuteInput = (e: ChangeEvent<HTMLInputElement>) => {
    if (parseInt(e.target.value))
      setTime((prev) => (prev % 60) + parseInt(e.target.value) * 60);
    else setTime((prev) => prev % 60);
  };
  const handleSecondInput = (e: ChangeEvent<HTMLInputElement>) => {
    setTime((prev) => Math.floor(prev / 60) * 60 + parseInt(e.target.value));
  };

  const handleSettings = (e: MouseEvent<HTMLButtonElement>) => {
    e.preventDefault();
    setInputInactive(false);
  };

  useEffect(() => {
    if (time !== 0) return;
    setActive(false);
    if (inputInactive) window?.alert('Times up!');
    setInputInactive(true);
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [time]);

  useEffect(() => {
    clearInterval(intervalTimer.current);
    if (!active || time == 0) return;
    setInputInactive(true);
    intervalTimer.current = setInterval(() => {
      setTime((prev) => {
        if (prev == 0) return prev;
        return (prev -= 1);
      });
    }, 1000);
    return () => {
      clearInterval(intervalTimer.current);
    };
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [active]);

  return (
    <div className={styles.container}>
      <Head>
        <title>01 - Pomodoro || Advent of JavaScript</title>
        <meta charSet="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <div className="wrapper">
          <div className={`ring ${time == 0 && 'ending'}`}>
            <svg width="518" height="518" viewBox="0 0 518 518">
              <circle
                stroke-width="9px"
                x="0"
                y="y"
                cx="259"
                cy="259"
                r="254"
                stroke={``}
              />
            </svg>
          </div>

          <div className="timer">
            <div className="time">
              <div className="minutes">
                <input
                  type="text"
                  value={Math.floor(time / 60)}
                  disabled={inputInactive}
                  onChange={handleMinuteInput}
                />
              </div>
              <div className="colon">:</div>
              <div className="seconds">
                <input
                  type="text"
                  value={time % 60 > 9 ? time % 60 : `0${time % 60}`}
                  disabled={inputInactive}
                  onChange={handleSecondInput}
                />
              </div>
            </div>
            <button className="start" onClick={handleStart}>
              {active ? 'Pause' : 'Start'}
            </button>
            <button className="settings" onClick={handleSettings}>
              <Image
                src="/images/gear.svg"
                alt="Settings"
                width={50}
                height={50}
              />
            </button>
          </div>
        </div>
      </main>
    </div>
  );
}
